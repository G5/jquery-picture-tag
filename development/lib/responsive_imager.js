// Generated by CoffeeScript 1.3.3
(function() {
  var $,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  $ = jQuery;

  this.ResponsiveImage = (function() {

    function ResponsiveImage($el) {
      this.$el = $el;
      this._doSomething = __bind(this._doSomething, this);

      this.highestMatch = 0;
      this.newSrc = void 0;
      this.mediaQuery = void 0;
      this.screenWidth = 0;
      this._doSomething();
      this._initBehavior();
    }

    ResponsiveImage.prototype._initBehavior = function() {
      return $(window).resize(this._doSomething);
    };

    ResponsiveImage.prototype._doSomething = function() {
      var _this = this;
      this.highestMatch = 0;
      this.smallestSource = this.$el.children("source:not([media])");
      this.newSrc = this._getSrcFromSrcset(this.smallestSource);
      this.$el.children("source").each(function(i, el) {
        _this.mediaQuery = $(el).attr("media");
        return _this._something(el);
      });
      return this._setPictureImgSrc(this.$el, this.newSrc);
    };

    ResponsiveImage.prototype._something = function(el) {
      if (matchMedia(this.mediaQuery).matches) {
        this.screenWidth = this.mediaQuery.match(/\d+/);
        if (this.screenWidth >= this.highestMatch) {
          this.highestMatch = this.screenWidth;
          this.newSrc = this._getSrcFromSrcset($(el));
          return console.log(this.newSrc);
        }
      }
    };

    ResponsiveImage.prototype._setPictureImgSrc = function($el, value) {
      return $el.children("img").attr("src", value);
    };

    ResponsiveImage.prototype._getSrcFromSrcset = function($el) {
      return this._getSrcset($el).match(/^\S+/)[0];
    };

    ResponsiveImage.prototype._getSrcset = function($el) {
      return $el.attr("srcset");
    };

    return ResponsiveImage;

  })();

  $.fn.makeResponsive = function() {
    var $pictures;
    $pictures = this;
    return $pictures.each(function() {
      var ri;
      return ri = new ResponsiveImage($(this));
    });
  };

}).call(this);
